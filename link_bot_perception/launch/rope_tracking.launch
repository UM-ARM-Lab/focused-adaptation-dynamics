<launch>
    <env name="ROSCONSOLE_CONFIG_FILE" value="$(find link_bot_perception)/custom_rosconsole.conf"/>

    <param name="rope_num_points" value="25"/>
    <arg name="record" value="false"/>
    <!--
        I've found that it's better to under-estimate the length of the rope, because rope_length is a "max" constraint,
        not a term in the objective. So the rope can be as long as rope_length * lambda,
        but it can be shorter if that's what best explains the point cloud
    -->
    <param name="max_rope_length" value="0.82"/>

    <!--        <node pkg="cdcpd" type="cdcpd_node" name="cdcpd_node" respawn="false" output="screen" launch-prefix="gdb -ex start &#45;&#45;args">-->
    <node pkg="cdcpd" type="cdcpd_node" name="cdcpd_node" respawn="false" output="screen">
        <param name="kinect_channel" value="qhd"/>
        <param name="kinect_name" value="kinect2_tripodA"/>
        <param name="points" value="merged_points"/>
        <param name="use_gripper_constraints" value="true"/>
        <param name="obstacle_cost_weight" value="0.02"/>
        <param name="fixed_points_weight" value="10.0"/>
        <param name="camera_frame" value="kinect2_tripodA_rgb_optical_frame"/>
        <param name="min_distance_threshold" value="0.01"/>
        <param name="lambda" value="1.0"/>
        <param name="moveit_enabled" value="true"/>
        <!-- gripper info should be a space seperated list of [TF_NAME IDX TF_NAME IDX ...] -->
        <param name="grippers_info" value="$(find link_bot_perception)/gripper_info.yaml"/>
    </node>

    <!--    <node pkg="link_bot_perception" type="rope_endpoint_tf.py" name="rope_endpoint_tf" required="true"/>-->

    <group if="$(arg record)">
        <node pkg="arm_video_recorder" type="video_recording.py" name="recording"
              args="/media/shared/captures/icra_2023/ --camera-name /dev/v4l/by-id/usb-AVerMedia_Technologies__Inc._Live_Gamer_Portable_2_Plus_1311774402370-video-index0"/>
    </group>
</launch>

